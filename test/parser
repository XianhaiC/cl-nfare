;;; -*- Mode: LISP; Syntax: COMMON-LISP; Package: CL-POSIXRE-TEST; Base: 10 -*-

(equal (parse "") nil)
(equal (parse "a") '(:char #\a))
(equal (parse "abcde")
       '(:concat (:char #\a)
	 (:concat (:char #\b)
	  (:concat (:char #\c)
	   (:concat (:char #\d)
		    (:char #\e))))))

(equal (parse "ab|cd")
       '(:alt
	 (:concat (:char #\a) (:char #\b))
	 (:concat (:char #\c) (:char #\d))))

(equal (parse "a|b|c")
       '(:alt
	 (:char #\a)
	 (:alt
	  (:char #\b)
	  (:char #\c))))

(equal (parse "|ab")
       '(:alt
	 nil
	 (:concat (:char #\a) (:char #\b))))

(equal (parse "(ab)")
       '(:sub-exp (:concat (:char #\a) (:char #\b))))

(equal (parse "a(ab)b")
       '(:concat (:char #\a)
	 (:concat
	  (:sub-exp (:concat (:char #\a) (:char #\b)))
	  (:char #\b))))

(equal (parse "a*")
       '(:rep :greedy (0 nil) (:char #\a)))

(equal (parse "a+")
       '(:rep :greedy (1 nil) (:char #\a)))

(equal (parse "a?")
       '(:rep :greedy (0 1) (:char #\a)))

(equal (parse "a{3}")
       '(:rep :greedy (3 3) (:char #\a)))

(equal (parse "a{3,5}")
       '(:rep :greedy (3 5) (:char #\a)))

(equal (parse "a*?")
       '(:rep :nongreedy (0 nil) (:char #\a)))
